{
	"info": {
		"_postman_id": "2eae0a8f-1684-4981-9f41-61193b25fa39",
		"name": "Event_Management_API",
		"description": "Complete API collection for Event Management System with authentication, events, tickets, and more",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28141574"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('user_token', response.token);",
									"    pm.environment.set('jwt_token', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with email and password"
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('admin_token', response.token);",
									"    pm.environment.set('jwt_token', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@manageevent.com\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login as admin user"
					},
					"response": []
				},
				{
					"name": "Login Organizer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('organizer_token', response.token);",
									"    pm.environment.set('jwt_token', response.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.updated@example.com\",\n  \"password\": \"organizer123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login as organizer user"
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"profile"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe Updated\",\n  \"email\": \"john.updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"profile"
							]
						},
						"description": "Update current user profile"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for login, register, and profile management"
		},
		{
			"name": "Admin Actions",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get all users (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Get specific user by ID"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated User Name\",\n  \"email\": \"updated@example.com\",\n  \"role\": \"organizer\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Update user information"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Delete user account"
					},
					"response": []
				}
			],
			"description": "Admin-only endpoints for user management"
		},
		{
			"name": "Event Organizer Actions",
			"item": [
				{
					"name": "Create Event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Tech Conference 2025\",\n  \"description\": \"Annual technology conference featuring the latest innovations\",\n  \"date\": \"2025-08-15T09:00:00Z\",\n  \"endDate\": \"2025-08-15T18:00:00Z\",\n  \"location\": \"Convention Center, New York\",\n  \"category\": \"Technology\",\n  \"maxAttendees\": 500,\n  \"isPublic\": true,\n  \"price\": 199.99,\n  \"tags\": [\"technology\", \"conference\", \"innovation\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							]
						},
						"description": "Create a new event (Organizer only)"
					},
					"response": []
				},
				{
					"name": "Get My Events",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/my-events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"my-events"
							]
						},
						"description": "Get events created by the organizer"
					},
					"response": []
				},
				{
					"name": "Update Event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Tech Conference 2025 - Updated\",\n  \"description\": \"Updated description for the annual technology conference\",\n  \"location\": \"Updated Convention Center, New York\",\n  \"maxAttendees\": 600,\n  \"price\": 249.99\n}"
						},
						"url": {
							"raw": "{{base_url}}/events/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"1"
							]
						},
						"description": "Update event details"
					},
					"response": []
				},
				{
					"name": "Delete Event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"1"
							]
						},
						"description": "Delete an event"
					},
					"response": []
				},
				{
					"name": "Get Event Attendees",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/1/attendees",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"1",
								"attendees"
							]
						},
						"description": "Get list of attendees for an event"
					},
					"response": []
				},
				{
					"name": "Create Ticket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventId\": 1,\n  \"type\": \"VIP\",\n  \"price\": 299.99,\n  \"quantity\": 50,\n  \"description\": \"VIP access with premium seating and networking lunch\",\n  \"benefits\": [\"Premium seating\", \"Networking lunch\", \"VIP lounge access\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/tickets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tickets"
							]
						},
						"description": "Create ticket for an event"
					},
					"response": []
				},
				{
					"name": "Update Ticket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"price\": 349.99,\n  \"quantity\": 75,\n  \"description\": \"Updated VIP access with additional benefits\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/tickets/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tickets",
								"1"
							]
						},
						"description": "Update ticket information"
					},
					"response": []
				}
			],
			"description": "Event organizer endpoints for managing events and tickets"
		},
		{
			"name": "Regular User Actions",
			"item": [
				{
					"name": "Get All Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events?page=1&limit=10&category=Technology&search=conference",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "category",
									"value": "Technology"
								},
								{
									"key": "search",
									"value": "conference"
								}
							]
						},
						"description": "Get all public events with filters"
					},
					"response": []
				},
				{
					"name": "Get Event by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/events/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"1"
							]
						},
						"description": "Get specific event details"
					},
					"response": []
				},
				{
					"name": "Get Event Tickets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tickets/event/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tickets",
								"event",
								"1"
							]
						},
						"description": "Get available tickets for an event"
					},
					"response": []
				},
				{
					"name": "Check Ticket Availability",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tickets/check-availability/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tickets",
								"check-availability",
								"1"
							]
						},
						"description": "Check if tickets are available"
					},
					"response": []
				},
				{
					"name": "Register for Event",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventId\": 1,\n  \"ticketId\": 1,\n  \"quantity\": 2,\n  \"attendeeInfo\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+1234567890\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/attendees/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"attendees",
								"register"
							]
						},
						"description": "Register for an event"
					},
					"response": []
				},
				{
					"name": "Get My Registrations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1/registrations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1",
								"registrations"
							]
						},
						"description": "Get my event registrations"
					},
					"response": []
				},
				{
					"name": "Cancel Registration",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendees/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"attendees",
								"1"
							]
						},
						"description": "Cancel event registration"
					},
					"response": []
				}
			],
			"description": "Regular user endpoints for browsing and registering for events"
		},
		{
			"name": "Forums & Discussions",
			"item": [
				{
					"name": "Get Event Forums",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/forums/event/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"forums",
								"event",
								"1"
							]
						},
						"description": "Get forum posts for an event"
					},
					"response": []
				},
				{
					"name": "Create Forum Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventId\": 1,\n  \"title\": \"Excited about the keynote speakers!\",\n  \"content\": \"Looking forward to hearing from the industry experts. Has anyone attended their previous talks?\",\n  \"category\": \"Discussion\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/forums",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"forums"
							]
						},
						"description": "Create a new forum post"
					},
					"response": []
				},
				{
					"name": "Reply to Forum Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventId\": 1,\n  \"content\": \"I attended their talk last year and it was amazing! Definitely worth it.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/forums/1/reply",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"forums",
								"1",
								"reply"
							]
						},
						"description": "Reply to a forum post"
					},
					"response": []
				},
				{
					"name": "Update Forum Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated: Excited about the keynote speakers!\",\n  \"content\": \"Updated content: Looking forward to hearing from the industry experts. Has anyone attended their previous talks? Please share your experience!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/forums/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"forums",
								"1"
							]
						},
						"description": "Update a forum post"
					},
					"response": []
				}
			],
			"description": "Forum and discussion endpoints for event communication"
		},
		{
			"name": "Polls & Surveys",
			"item": [
				{
					"name": "Get Event Polls",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/polls/event/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"polls",
								"event",
								"1"
							]
						},
						"description": "Get polls for an event"
					},
					"response": []
				},
				{
					"name": "Create Poll",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventId\": 1,\n  \"question\": \"Which session are you most excited about?\",\n  \"options\": [\n    {\n      \"text\": \"AI and Machine Learning\",\n      \"value\": \"ai-ml\"\n    },\n    {\n      \"text\": \"Cloud Computing\",\n      \"value\": \"cloud\"\n    },\n    {\n      \"text\": \"Cybersecurity\",\n      \"value\": \"security\"\n    },\n    {\n      \"text\": \"Web Development\",\n      \"value\": \"webdev\"\n    }\n  ],\n  \"allowMultiple\": false,\n  \"expiresAt\": \"2025-08-14T23:59:59Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/polls",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"polls"
							]
						},
						"description": "Create a new poll for an event"
					},
					"response": []
				},
				{
					"name": "Vote on Poll",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"optionId\": 1,\n  \"value\": \"ai-ml\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/polls/1/vote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"polls",
								"1",
								"vote"
							]
						},
						"description": "Vote on a poll"
					},
					"response": []
				},
				{
					"name": "Get Poll Results",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/polls/1/results",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"polls",
								"1",
								"results"
							]
						},
						"description": "Get poll results"
					},
					"response": []
				}
			],
			"description": "Poll and survey endpoints for event engagement"
		},
		{
			"name": "Q&A Sessions",
			"item": [
				{
					"name": "Get Event Q&A",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/qa/event/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"qa",
								"event",
								"1"
							]
						},
						"description": "Get Q&A questions for an event"
					},
					"response": []
				},
				{
					"name": "Submit Question",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventId\": 1,\n  \"question\": \"What are the prerequisites for the AI workshop session?\",\n  \"category\": \"Workshop\",\n  \"isAnonymous\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/qa",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"qa"
							]
						},
						"description": "Submit a question for Q&A"
					},
					"response": []
				},
				{
					"name": "Answer Question",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{organizer_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"answer\": \"Basic knowledge .\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/qa/1/answer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"qa",
								"1",
								"answer"
							]
						},
						"description": "Answer a Q&A question"
					},
					"response": []
				},
				{
					"name": "Upvote Question",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/qa/1/upvote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"qa",
								"1",
								"upvote"
							]
						},
						"description": "Upvote a question"
					},
					"response": []
				}
			],
			"description": "Q&A session endpoints for event questions and answers"
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Get My Notifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/notifications?page=1&limit=10&unreadOnly=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "unreadOnly",
									"value": "true"
								}
							]
						},
						"description": "Get user notifications"
					},
					"response": []
				},
				{
					"name": "Mark Notification as Read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/notifications/18/read",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notifications",
								"18",
								"read"
							]
						},
						"description": "Mark notification as read"
					},
					"response": []
				},
				{
					"name": "Mark All as Read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/notifications/read-all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notifications",
								"read-all"
							]
						},
						"description": "Mark all notifications as read"
					},
					"response": []
				},
				{
					"name": "Delete Notification",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/notifications/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notifications",
								"1"
							]
						},
						"description": "Delete a notification"
					},
					"response": []
				},
				{
					"name": "Createnotification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"name": "cache-control",
								"type": "text"
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"name": "postman-token",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "content-type",
								"type": "text"
							},
							{
								"key": "Content-Length",
								"value": "<calculated when request is sent>",
								"name": "content-length",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"name": "host",
								"type": "text"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.39.1",
								"name": "user-agent",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*",
								"name": "accept",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"name": "accept-encoding",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"name": "connection",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{organizer_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"eventId\": 1,\n    \"title\": \"Event Update\",\n    \"message\": \"This is a test notification for the event\",\n    \"type\": \"info\",\n    \"targetUsers\": [\n        3,\n        4,\n        5\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/notifications/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"notifications",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "getnotificationbyid",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"name": "cache-control",
								"type": "text"
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"name": "postman-token",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"name": "host",
								"type": "text"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.39.1",
								"name": "user-agent",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*",
								"name": "accept",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"name": "accept-encoding",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"name": "connection",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/notifications/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notifications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "18",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "unread-count",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/notifications/unread-count",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notifications",
								"unread-count"
							]
						}
					},
					"response": []
				}
			],
			"description": "Notification management endpoints"
		},
		{
			"name": "Payment Processing",
			"item": [
				{
					"name": "Create Payment Intent",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventId\": 1,\n  \"ticketId\": 1,\n  \"quantity\": 2,\n  \"currency\": \"usd\",\n  \"paymentMethod\": \"card\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/payments/create-intent",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payments",
								"create-intent"
							]
						},
						"description": "Create payment intent for ticket purchase"
					},
					"response": []
				},
				{
					"name": "Confirm Payment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"paymentIntentId\": \"pi_1234567890\",\n  \"attendeeInfo\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+1234567890\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/payments/confirm",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payments",
								"confirm"
							]
						},
						"description": "Confirm payment and complete registration"
					},
					"response": []
				},
				{
					"name": "Get Payment History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/payments/history?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payments",
								"history"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get user payment history"
					},
					"response": []
				},
				{
					"name": "Request Refund",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"paymentId\": \"pay_1234567890\",\n  \"reason\": \"Unable to attend due to personal reasons\",\n  \"amount\": 199.99\n}"
						},
						"url": {
							"raw": "{{base_url}}/payments/refund",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payments",
								"refund"
							]
						},
						"description": "Request payment refund"
					},
					"response": []
				}
			],
			"description": "Payment processing endpoints for ticket purchases"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000/api",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImVtYWlsIjoib3JnYW5pemVyQG1hbmFnZWV2ZW50LmNvbSIsImlhdCI6MTc1Mzg5NzAyNiwiZXhwIjoxNzUzOTgzNDI2fQ.WzeFMmiAVcWVhFFKG9WC14FosS1PKEZXUejOXHsTDBw",
			"type": "string"
		},
		{
			"key": "admin_token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsImVtYWlsIjoiYmlrcmFtQGdtYWlsLmNvbSIsImlhdCI6MTc1Mzg5NzYxNiwiZXhwIjoxNzUzOTg0MDE2fQ.Zhm9SmolYHoFeAv0WUppzqY3ikJlqRvztnJrcM6K4uo",
			"type": "string"
		},
		{
			"key": "organizer_token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImVtYWlsIjoiam9obi51cGRhdGVkQGV4YW1wbGUuY29tIiwicm9sZSI6Im9yZ2FuaXplciIsImlhdCI6MTc1Mzk3OTg4OSwiZXhwIjoxNzU0MDY2Mjg5fQ.-_y_hBPhWHwcDLfq8BTtqpN-Oyk4Yuy1bn_ofc7Qz-Y",
			"type": "string"
		},
		{
			"key": "user_token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsImVtYWlsIjoiam9obi5kb2VAZXhhbXBsZS5jb20iLCJpYXQiOjE3NTM4OTY5NTgsImV4cCI6MTc1Mzk4MzM1OH0.we63-YXaR241Mw-X5tp04jEduKDeJRZZjiPS0C4WTyg",
			"type": "string"
		}
	]
}